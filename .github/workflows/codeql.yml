name: CodeQL (Rust)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: "23 3 * * 1"   # Mondays 03:23 Europe/London
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  security-events: write

concurrency:
  group: codeql-${{ github.ref }}
  cancel-in-progress: true

jobs:
  analyze:
    name: CodeQL / rust (${{ matrix.variant }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - variant: default
          - variant: all-features
          - variant: minimal

    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: rust
          build-mode: none            # <-- Rust requires 'none'
          queries: security-extended,security-and-quality

      # (Optional) You can keep a separate compile check, but it won't affect CodeQL.
      # Uncomment if you still want to ensure the code compiles in CI:
      # - name: Set up Rust toolchain
      #   uses: dtolnay/rust-toolchain@stable
      #
      # - name: Compile (sanity check only; not used by CodeQL)
      #   run: |
      #     set -euxo pipefail
      #     case "${{ matrix.variant }}" in
      #       default)   cargo build --workspace --all-targets --locked ;;
      #       all-features) cargo build --workspace --all-targets --all-features --locked ;;
      #       minimal)   cargo build --workspace --all-targets --no-default-features --locked ;;
      #     esac

      - name: Perform CodeQL Analysis (${{ matrix.variant }})
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:rust;variant=${{ matrix.variant }}"
