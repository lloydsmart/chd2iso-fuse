name: Cargo Audit

on:
  push:
    branches: [ main, develop, feature/** ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: cargo-audit-${{ github.ref }}
  cancel-in-progress: true

jobs:
  audit:
    name: cargo-audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      # Cache cargo registry/git + binary installs + advisory DB
      - name: Cache Cargo artifacts
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            ~/.cargo/advisory-db
          key: ${{ runner.os }}-cargo-audit-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-audit-

      - name: Install cargo-audit
        run: |
          set -euxo pipefail
          if ! command -v cargo-audit >/dev/null 2>&1; then
            cargo install cargo-audit --locked
          fi
          cargo-audit --version

      - name: Run cargo audit
        run: cargo audit
