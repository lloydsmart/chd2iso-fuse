name: Reusable â€” Build & Test
on:
  workflow_call:
    inputs:
      lane: { type: string, required: true }
      nightly: { type: boolean, default: false }

permissions:
  contents: read

jobs:
  rust-deb:
    name: Rust build & tests (chd2iso-fuse)
    runs-on: ubuntu-latest
    container:
      image: debian:trixie
      options: --init
    env:
      RUSTC_WRAPPER: sccache
      SCCACHE_DIR: ${{ github.workspace }}/.sccache
      SCCACHE_CACHE_SIZE: 2G
      RUSTFLAGS: "--remap-path-prefix=${{ github.workspace }}=."
      DEBFULLNAME: "Lloyd Smart"
      DEBEMAIL: "lloydsmart@users.noreply.github.com"
      EMAIL: "lloydsmart@users.noreply.github.com"
    steps:
      - name: Checkout (with tags)
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      # Compute a stable hash for Cargo.lock (or 'none' if missing)
      - name: Hash Cargo.lock
        id: cargo_lock
        shell: bash
        run: |
          if [ -f Cargo.lock ]; then
            echo "val=$(sha256sum Cargo.lock | cut -d' ' -f1)" >> "$GITHUB_OUTPUT"
          else
            echo "val=none" >> "$GITHUB_OUTPUT"
          fi

      - name: Install toolchain & deps
        run: |
          set -euo pipefail
          apt-get update
          apt-get install -y --no-install-recommends \
            curl ca-certificates git build-essential pkg-config \
            libfuse3-dev fuse3 \
            gcc g++ make \
            rust-all rust-clippy rustfmt \
            debhelper devscripts dh-cargo lintian \
            bats shellcheck \
            sccache || true

          if ! command -v sccache >/dev/null 2>&1; then
            cargo install sccache --locked
            ln -sf "$HOME/.cargo/bin/sccache" /usr/local/bin/sccache
          fi

          rustc -V; cargo -V
          command -v clippy-driver && clippy-driver -V || echo "clippy-driver not found"
          sccache --version

      - name: Cache sccache
        uses: actions/cache@v4
        with:
          path: .sccache
          key: sccache-${{ runner.os }}-${{ steps.cargo_lock.outputs.val }}-${{ github.ref_name }}
          restore-keys: |
            sccache-${{ runner.os }}-${{ steps.cargo_lock.outputs.val }}-
            sccache-${{ runner.os }}-

      - name: Rust fmt & clippy
        run: |
          cargo fmt --all -- --check
          cargo clippy --workspace --all-targets -- -D warnings

      - name: Rust tests
        run: cargo test --workspace --locked --all-features

      - name: Build release binary
        run: cargo build --release --locked

      - name: Debian build
        run: |
          dpkg-buildpackage -us -uc -b
          mkdir -p artifacts
          mv ../*.deb ../*.buildinfo ../*.changes artifacts/ || true
          (cd artifacts && sha256sum * > SHA256SUMS || true)

      - name: Lintian (non-fatal)
        continue-on-error: true
        run: |
          set -e
          if compgen -G "artifacts/*.deb" > /dev/null; then
            lintian artifacts/*.deb || true
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: chd2iso-fuse-${{ inputs.lane }}-${{ github.sha }}
          path: artifacts/
