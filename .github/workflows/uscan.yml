name: uscan (watch upstream)

on:
  schedule:
    - cron: "15 8 * * 1-5"   # Weekdays 08:15 Europe/London
  workflow_dispatch:

permissions:
  contents: write
  issues: write

jobs:
  uscan:
    name: Watch upstream (dehs)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (with tags)
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Install devscripts (for uscan)
        run: |
          set -euo pipefail
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends devscripts ca-certificates

      - name: Run uscan
        id: scan
        shell: bash
        run: |
          set -euo pipefail

          # Capture real exit code without pipes changing it.
          # --dehs writes XML to STDOUT; keep a verbose log on STDERR.
          if uscan --dehs --verbose --timeout 30 > uscan.xml 2>uscan.log; then
            rc=0
          else
            rc=$?
          fi

          echo "uscan exit code: $rc"
          # Only fail on rc >= 2 (rc=0 newer available, rc=1 up-to-date).
          if (( rc >= 2 )); then
            echo "::error::uscan failed (rc=$rc)"
            sed -n '1,200p' uscan.log || true
            exit "$rc"
          fi

          # Derive outputs from the XML
          if grep -q '<status>newer</status>' uscan.xml; then
            ver="$(grep -oPm1 '(?<=<upstream-version>)[^<]+' uscan.xml || echo unknown)"
            {
              echo "newer=true"
              echo "version=$ver"
            } >> "$GITHUB_OUTPUT"
          else
            echo "newer=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Create issue if newer upstream
        if: steps.scan.outputs.newer == 'true'
        uses: actions/github-script@v8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const ver = '${{ steps.scan.outputs.version }}';
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `New upstream release detected: ${ver}`,
              body: [
                `uscan detected a newer upstream release **${ver}**.`,
                ``,
                `Next steps:`,
                `1) Update \`debian/changelog\` (e.g. \`dch -v ${ver}-1 "New upstream release"\`).`,
                `2) Build per suite (sbuild for bookworm/trixie).`,
                `3) Add to aptly/reprepro repo and publish snapshot.`,
              ].join('\n'),
              labels: ['uscan', 'packaging']
            });
