name: CI (Lint, Build & Release on tag) â€” Debian Trixie

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]     # any tag starting with v (e.g., v0.1.2)
  pull_request:

permissions:
  contents: write  # needed by release job to publish a GitHub Release

jobs:
  lint-build:
    name: Lint & Build (.deb artifacts)
    runs-on: ubuntu-latest
    container:
      image: debian:trixie
      options: --init
    steps:
      - uses: actions/checkout@v4

      - name: Install toolchain & build deps
        run: |
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
            build-essential pkg-config \
            libfuse3-dev fuse3 \
            rustc cargo rustfmt rust-clippy clang \
            devscripts debhelper dh-cargo lintian \
            ca-certificates git

      # -------- Cargo caches (speed up builds) --------
      - name: Cargo cache (registry + index)
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-registry-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Cargo cache (target/)
        uses: actions/cache@v4
        with:
          path: target
          key: cargo-target-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-target-${{ runner.os }}-

      # -------- Lint & Build --------
      - name: Cargo fmt (check)
        run: cargo fmt -- --check

      - name: Cargo clippy (deny warnings)
        run: cargo clippy -- -D warnings

      - name: Build release (cargo)
        run: cargo build --release

      - name: Build .deb (debuild)
        run: debuild -us -uc -b

      - name: Lintian (non-fatal)
        run: |
          set -e
          if ls ../chd2iso-fuse_*_amd64.changes >/dev/null 2>&1; then
            lintian ../chd2iso-fuse_*_amd64.changes || true
          fi

      - name: Collect Debian artifacts
        run: |
          set -e
          mkdir -p artifacts
          for f in ../chd2iso-fuse_*_amd64.deb \
                   ../chd2iso-fuse-dbgsym_*_amd64.deb \
                   ../chd2iso-fuse_*_amd64.buildinfo \
                   ../chd2iso-fuse_*_amd64.changes; do
            [ -e "$f" ] && cp "$f" artifacts/
          done
          ls -l artifacts

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: chd2iso-fuse-debs
          path: artifacts/*
          if-no-files-found: error
          retention-days: 14

  release:
    name: Publish GitHub Release (on tag)
    runs-on: ubuntu-latest
    needs: [lint-build]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: chd2iso-fuse-debs
          path: artifacts

      - name: Show downloaded artifacts
        run: ls -l artifacts

      - name: Create Release & Upload assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            artifacts/*.deb
            artifacts/*.changes
            artifacts/*.buildinfo
          generate_release_notes: true
