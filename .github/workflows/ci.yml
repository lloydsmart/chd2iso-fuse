name: Build & (on tag) Release â€“ Debian Trixie

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'     # e.g. v0.1.2
  pull_request:

# Give the workflow permission to create releases
permissions:
  contents: write
  actions: read

jobs:
  build-debs:
    name: Build .deb (always)
    runs-on: ubuntu-latest
    container:
      image: debian:trixie
      options: --init
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
          fetch-tags: true

      - name: Install toolchain & build deps
        run: |
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
            build-essential pkg-config \
            libfuse3-dev fuse3 \
            rustc cargo rustfmt rust-clippy clang \
            devscripts debhelper dh-cargo lintian \
            curl jq ca-certificates git

      # Cache cargo registry & target to speed up builds
      - name: Cache cargo registry & target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      # Generate Debian changelog with commits + merged PRs (only on tag)
      - name: Generate Debian changelog from Git + merged PRs (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        env:
          TAG: ${{ github.ref_name }}          # e.g. v0.1.4
          REPO: ${{ github.repository }}       # owner/name
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail

          VERSION="${TAG#v}"

          # Ensure full tag context
          git fetch --tags --force --prune

          # Resolve previous tag relative to THIS tag's chronological position
          mapfile -t TAGS < <(git tag --list --sort=creatordate)
          PREV_TAG=""
          for i in "${!TAGS[@]}"; do
            if [[ "${TAGS[$i]}" == "${TAG}" ]]; then
              if (( i > 0 )); then PREV_TAG="${TAGS[$((i-1))]}"; fi
              break
            fi
          done

          # Commit range for bullets (commits only)
          if [[ -n "${PREV_TAG}" ]]; then
            RANGE="${PREV_TAG}..${TAG}"
          else
            # first tag: include all reachable history up to this tag
            FIRST_COMMIT="$(git rev-list --max-parents=0 "${TAG}")"
            RANGE="${FIRST_COMMIT}..${TAG}"
          fi

          echo "Current tag : ${TAG}"
          echo "Previous tag: ${PREV_TAG:-<none>}"
          echo "Range       : ${RANGE}"

          # Collect commit subjects (no merges; oldest -> newest)
          mapfile -t CHANGES < <(git log --no-merges --reverse --pretty=format:'- %s (%h)' "${RANGE}" || true)

          # Determine time window for merged PRs using tag commit timestamps (ISO-8601)
          START_ISO="1970-01-01T00:00:00Z"
          if [[ -n "${PREV_TAG}" ]]; then
            START_ISO="$(git log -1 --format=%cI "${PREV_TAG}")"
          fi
          END_ISO="$(git log -1 --format=%cI "${TAG}")"

          echo "PR window   : ${START_ISO} .. ${END_ISO}"

          # Search merged PRs in the window
          # Note: Search API caps 100 results; adjust if you expect >100 PRs per release.
          PRS_JSON="$(curl -sS -H "Authorization: Bearer ${GH_TOKEN}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/search/issues?q=repo:${REPO}+is:pr+is:merged+merged:${START_ISO}..${END_ISO}&per_page=100")"

          # Extract "title (#number) by @user"
          mapfile -t PR_LINES < <(echo "${PRS_JSON}" \
            | jq -r '.items[] | "- PR #\(.number): \(.title) (@\(.user.login))"' || true)

          # Start new changelog entry
          dch --changelog debian/changelog \
              -v "${VERSION}-1" \
              --distribution trixie \
              --urgency medium \
              "Release ${VERSION}"

          # Append commit bullets
          if ((${#CHANGES[@]})); then
            for line in "${CHANGES[@]}"; do
              dch --changelog debian/changelog -a "$line"
            done
          else
            dch --changelog debian/changelog -a "No direct commit changes since ${PREV_TAG:-initial}."
          fi

          # Append a PR section (if any)
          if ((${#PR_LINES[@]})); then
            dch --changelog debian/changelog -a ""
            dch --changelog debian/changelog -a "Merged PRs:"
            for pr in "${PR_LINES[@]}"; do
              dch --changelog debian/changelog -a "  ${pr}"
            done
          else
            dch --changelog debian/changelog -a ""
            dch --changelog debian/changelog -a "Merged PRs: (none in this window)"
          fi

          # Finalize the entry trailer
          dch --changelog debian/changelog -r ""

      - name: Cargo fmt + clippy + build
        run: |
          cargo fmt -- --check
          cargo clippy -- -D warnings
          cargo build --release

      - name: Build .deb with debuild
        run: debuild -us -uc -b

      - name: Lintian (non-fatal)
        run: lintian ../chd2iso-fuse_*_amd64.changes || true

      - name: Collect artifacts
        run: |
          set -e
          mkdir -p artifacts
          mv ../chd2iso-fuse_*_amd64.deb artifacts/ || true
          mv ../chd2iso-fuse-dbgsym_*_amd64.deb artifacts/ || true
          mv ../chd2iso-fuse_*_amd64.buildinfo artifacts/ || true
          mv ../chd2iso-fuse_*_amd64.changes artifacts/ || true
          ls -l artifacts || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: chd2iso-fuse-debs
          path: artifacts/*
          if-no-files-found: error
          retention-days: 14

  publish-release:
    name: Publish GitHub Release (only on tag)
    runs-on: ubuntu-latest
    needs: build-debs
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: chd2iso-fuse-debs
          path: artifacts

      - name: Create/Update Release & attach artifacts
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: chd2iso-fuse ${{ github.ref_name }}
          generate_release_notes: true
          files: |
            artifacts/*.deb
            artifacts/*.buildinfo
            artifacts/*.changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
