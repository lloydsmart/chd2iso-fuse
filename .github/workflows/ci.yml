name: Build & (on tag) Release â€“ Debian Trixie

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'     # e.g. v0.1.2
  pull_request:

# Give the workflow permission to create releases
permissions:
  contents: write
  actions: read

jobs:
  build-debs:
    name: Build .deb (always)
    runs-on: ubuntu-latest
    container:
      image: debian:trixie
      options: --init
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
          fetch-tags: true

      - name: Install toolchain & build deps
        run: |
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
            build-essential pkg-config \
            libfuse3-dev fuse3 \
            rustc cargo rustfmt rust-clippy clang \
            devscripts debhelper dh-cargo lintian

      # Cache cargo registry & target to speed up builds
      - name: Cache cargo registry & target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      # Only bump debian/changelog when building from a tag
      - name: Set version from tag in debian/changelog
        if: startsWith(github.ref, 'refs/tags/')
        env:
          TAG: ${{ github.ref_name }}   # e.g. v0.1.2
        run: |
          set -e
          VERSION="${TAG#v}"
          dch --changelog debian/changelog \
              -v "${VERSION}-1" \
              --distribution trixie \
              "Release ${VERSION}" || true
          dch -r "" || true
          dpkg-parsechangelog -S Version | grep -E "^${VERSION}-"

      - name: Cargo fmt + clippy + build
        run: |
          cargo fmt -- --check
          cargo clippy -- -D warnings
          cargo build --release

      - name: Build .deb with debuild
        run: debuild -us -uc -b

      - name: Lintian (non-fatal)
        run: lintian ../chd2iso-fuse_*_amd64.changes || true

      - name: Collect artifacts
        run: |
          set -e
          mkdir -p artifacts
          mv ../chd2iso-fuse_*_amd64.deb artifacts/ || true
          mv ../chd2iso-fuse-dbgsym_*_amd64.deb artifacts/ || true
          mv ../chd2iso-fuse_*_amd64.buildinfo artifacts/ || true
          mv ../chd2iso-fuse_*_amd64.changes artifacts/ || true
          ls -l artifacts || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: chd2iso-fuse-debs
          path: artifacts/*
          if-no-files-found: error
          retention-days: 14

  publish-release:
    name: Publish GitHub Release (only on tag)
    runs-on: ubuntu-latest
    needs: build-debs
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: chd2iso-fuse-debs
          path: artifacts

      - name: Create/Update Release & attach artifacts
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: chd2iso-fuse ${{ github.ref_name }}
          generate_release_notes: true
          files: |
            artifacts/*.deb
            artifacts/*.buildinfo
            artifacts/*.changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
