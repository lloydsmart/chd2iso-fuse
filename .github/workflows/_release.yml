name: Reusable â€” Release lane
on:
  workflow_call:
    inputs:
      lane: { type: string, required: true }
      nightly: { type: boolean, default: false }
      apt_enabled: { type: boolean, default: false }
    secrets: {}

permissions:
  contents: write   # for GitHub Releases later

jobs:
  prepare-release:
    name: Prepare release (no-op for now)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Determine channel
        id: ch
        run: |
          lane="${{ inputs.lane }}"
          channel="none"
          case "$lane" in
            develop)  channel="${{ inputs.nightly && 'unstable' || 'none' }}" ;;
            release*) channel="candidate" ;;
            hotfix*)  channel="candidate" ;;
            main)     channel="stable" ;;
          esac
          echo "channel=$channel" >> "$GITHUB_OUTPUT"

      - name: Summary
        run: |
          echo "Lane: ${{ inputs.lane }}"
          echo "Nightly: ${{ inputs.nightly }}"
          echo "Channel: ${{ steps.ch.outputs.channel }}"
          echo "APT enabled: ${{ inputs.apt_enabled }}"

  publish-apt:
    needs: prepare-release
    if: ${{ inputs.apt_enabled && steps.ch.outputs.channel != 'none' }}
    name: Publish to APT (gated)
    # Route to an environment that matches the channel (enforces approvals if configured)
    environment:
      name: ${{ steps.ch.outputs.channel }}   # unstable | candidate | stable
    permissions:
      contents: read
    uses: ./.github/workflows/_publish-apt.yml
    with:
      channel:   ${{ steps.ch.outputs.channel }}
      suite:     trixie
      component: main
      arch:      amd64
    secrets: inherit
