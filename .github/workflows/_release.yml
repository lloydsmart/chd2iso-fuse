name: Reusable – Release lane 📦🚀

on:
  workflow_call:
    inputs:
      lane:
        type: string
        required: true
      nightly:
        type: boolean
        default: false
      apt_enabled:
        type: boolean
        default: false

permissions:
  contents: write

jobs:
  prepare-release:
    name: 🧭 Prepare release (decide channel)
    runs-on: ubuntu-latest
    outputs:
      channel: ${{ steps.ch.outputs.channel }}
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: 🧮 Determine channel
        id: ch
        shell: bash
        run: |
          set -euo pipefail
          lane="${{ inputs.lane }}"
          nightly="${{ inputs.nightly }}"
          channel="none"
          case "$lane" in
            develop)
              if [[ "$nightly" == "true" ]]; then
                channel="unstable"
              else
                channel="none"
              fi
              ;;
            release*) channel="candidate" ;;
            hotfix*)  channel="candidate" ;;
            main)     channel="stable" ;;
            *)        channel="none" ;;
          esac
          echo "channel=$channel" >> "$GITHUB_OUTPUT"
          echo "Resolved channel: $channel"

      - name: 📝 Summary
        shell: bash
        run: |
          echo "Lane:     ${{ inputs.lane }}"
          echo "Nightly:  ${{ inputs.nightly }}"
          echo "Channel:  ${{ steps.ch.outputs.channel }}"
          echo "APT:      ${{ inputs.apt_enabled }}"

  publish-apt:
    name: 📦 Publish to APT (gated) 🔒
    needs: prepare-release
    if: ${{ inputs.apt_enabled && needs.prepare-release.outputs.channel != 'none' }}
    permissions:
      contents: read
    uses: ./.github/workflows/_publish-apt.yml
    with:
      channel:   ${{ needs.prepare-release.outputs.channel }}
      suite:     trixie
      component: main
      arch:      amd64
    secrets: inherit

  publish-stub:
    name: 🚧 Publish stub (no-op)
    needs: prepare-release
    if: ${{ !inputs.apt_enabled || needs.prepare-release.outputs.channel == 'none' }}
    runs-on: ubuntu-latest
    steps:
      - name: 💤 No-op publish
        shell: bash
        run: |
          echo "No publishing required."
          echo "channel='${{ needs.prepare-release.outputs.channel }}', apt_enabled='${{ inputs.apt_enabled }}'"
