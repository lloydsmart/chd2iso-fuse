      - name: Run cargo-audit
        if: steps.gate.outputs.run == 'true'
        shell: bash
        env:
          CARGO_TERM_COLOR: always
          # Optional comma-separated list you can set in repo/org vars or secrets
          # e.g. "RUSTSEC-2021-0154,RUSTSEC-2020-0053"
          ACCEPTED: ${{ vars.RUSTSEC_ACCEPTED_ADVISORIES || secrets.RUSTSEC_ACCEPTED_ADVISORIES || '' }}
        run: |
          set -euo pipefail
          # Ensure we have a lockfile (some CI paths may check out without it)
          [ -f Cargo.lock ] || cargo generate-lockfile

          args=( -D warnings )

          # Respect user-provided ACCEPTED list
          if [[ -n "${ACCEPTED}" ]]; then
            IFS=',' read -ra ids <<< "${ACCEPTED}"
            for id in "${ids[@]}"; do
              id_trimmed="$(echo "$id" | xargs)"
              [[ -n "$id_trimmed" ]] && args+=( --ignore "$id_trimmed" )
            done
          fi

          # Also ignore the long-standing fuser advisory unless already accepted
          if [[ ",${ACCEPTED}," != *",RUSTSEC-2021-0154,"* ]]; then
            args+=( --ignore RUSTSEC-2021-0154 )
          fi

          cargo audit "${args[@]}"

      - name: Skipped (no relevant changes)
        if: steps.gate.outputs.run != 'true'
        run: echo "No Rust changes detected (and not forced); skipping cargo-audit."
        