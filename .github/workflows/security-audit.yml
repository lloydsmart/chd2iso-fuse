name: Security audit (cargo-audit)

on:
  push:
    branches: [ develop, main ]
  pull_request:
    branches: [ develop, main ]
  schedule:
    - cron: "45 3 * * 1"   # Mondays 03:45 Europe/London
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: sec-audit-${{ github.ref }}
  cancel-in-progress: true

jobs:
  cargo-audit:
    name: cargo-audit
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      # Optional: comma-separated list of advisories to ignore
      ACCEPTED: ${{ vars.RUSTSEC_ACCEPTED_ADVISORIES || secrets.RUSTSEC_ACCEPTED_ADVISORIES || '' }}
      CARGO_TERM_COLOR: always

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Cache cargo-audit binary
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin/cargo-audit
          key: cargo-audit-bin-${{ runner.os }}-0.20.0

      - name: Install cargo-audit (pinned)
        run: |
          if ! command -v cargo-audit >/dev/null 2>&1; then
            cargo install cargo-audit --version 0.20.0
          fi
          cargo audit --version

      # NOTE: No explicit fetch; cargo-audit will update the advisory DB automatically.

      - name: Run cargo-audit
        shell: bash
        run: |
          set -euo pipefail
          args=( -D warnings )  # fail on warnings/vulns
          if [[ -n "${ACCEPTED}" ]]; then
            IFS=',' read -ra ids <<< "${ACCEPTED}"
            for id in "${ids[@]}"; do
              id_trimmed="$(echo "$id" | xargs)"
              [[ -n "$id_trimmed" ]] && args+=( --ignore "$id_trimmed" )
            done
          fi
          echo "Running: cargo audit ${args[*]}"
          cargo audit "${args[@]}"
